'scopeName': 'source.rsl'
'name': 'RSL'
'fileTypes': [
  'rsl'
]
'firstLineMatch': '^scheme'
'patterns': [
  {
    'begin': '/\\*'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.rsl'
    'end': '\\*/'
    'name': 'comment.block.rsl'
  }
  {
    'match': '(\-\-).*'
    'name': 'comment.line.rsl'
  }
  {
    'match': '\\b(scheme|class|type|value|end|test_case|case|of|extend|with|post|pre|if|then|else|elsif|let|-set|-infset|-list|-inflist)\\b'
    'name': 'support.function.construct.rsl'
  }
  {
    'match': '(\\-\\>|\\>\\<|\\-m\\-\\>|\\-\\~\\-\\>)'
    'name': 'storage.modifier.rsl'
  }
  {
    'match': '(\\:\\-|\\-\\\\)'
    'name': 'entity.name.function.rsl'
    'comment': 'Can these be overloaded? Or what are they?'
  }
  {
    'match': '\\b(all|always|exists|is|in|isin|inter|union|len|hd|tl|abs|int|real|card|inds|elems|dom|rng)\\b'
    'name': 'entity.name.function.rsl'
    'comment': 'Can these be overloaded? Or what are they?'
  }
  {
    'match': '(\\~|\\/\\\\|\\\\\\/|\\=|\\>|\\<|\\<\\.|\\|\\||\\.\\>|\\!\\!|\\<\\-\\>)'
    'name': 'keyword.operator.logical.rsl'
    'comment': 'logical operators. Can these be overloaded?'
  }
  {
    'match': '(?i)\\b(TRUE|FALSE|NULL|CHAOS)\\b'
    'name': 'constant.language.rsl'
  }
  {
    'match': '\\b[A-Z][A-Za-z0-9]*'
    'name': 'variable.assignment.rsl'
  }
  {
    'match': '\\s(^|\\s)+\\w+\\s*(?=[:(])'
    'name': 'entity.name.function.rsl'
  }
  {
    'match': '[a-z]*[A-Z]*\\w+(?=[(])'
    'name': 'entity.name.function.rsl'
  }
]
